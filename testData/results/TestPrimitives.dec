package pkg;

import java.util.HashMap;

public class TestPrimitives {
   private void testInvalidUnboxing() {
      List<Integer> lst = null;// 7
      lst.remove(Integer.valueOf(0));// 8
      this.genericBoxing((short)0);// 9
      int a = this.genericReturn(lst);// 10
      List<Byte> b = null;// 11
      this.genericParameter(b, (byte)0);// 12
      this.genericParameter(lst, 0);// 13
   }// 14

   private <T> void genericBoxing(T value) {
   }// 16

   private <T> T genericReturn(List<T> value) {
      return value.get(0);// 17
   }

   private <T> void genericParameter(List<T> p, T v) {
   }// 18

   public void printAll() {
      this.printBoolean(true);// 8
      this.printByte((byte)123);// 9
      this.printShort((short)257);// 10
      this.printInt(123);// 11
      this.printLong(123L);// 12
      this.printFloat(1.23F);// 13
      this.printDouble(1.23D);// 14
      this.printChar('Z');// 15
      this.printBooleanBoxed(true);// 17
      this.printByteBoxed((byte)123);// 18
      this.printShortBoxed((short)257);// 19
      this.printIntBoxed(1);// 20
      this.printIntBoxed(40000);// 21
      this.printLongBoxed(123L);// 22
      this.printFloatBoxed(1.23F);// 23
      this.printDoubleBoxed(1.23D);// 24
      this.printCharBoxed('Z');// 25
      this.printBoolean(Boolean.valueOf("true"));// 27
      this.printByte(Byte.valueOf("123"));// 28
      this.printShort(Short.valueOf("257"));// 29
      this.printInt(Integer.valueOf("123"));// 30
      this.printLong(Long.valueOf("123"));// 31
      this.printFloat(Float.valueOf("1.23"));// 32
      this.printDouble(Double.valueOf("1.23"));// 33
      this.printChar(new Character('Z'));// 34
      this.printInt(this.getInteger());// 36
      this.printChar(this.getCharacter());// 37
      System.out.printf("%b, %d, %d, %d, %c, %d", true, 1, 213, 40000, 'c', 42L);// 39
      System.out.printf("%b, %d, %d, %d", this.getBoolean(), this.getByte(), this.getShort(), this.getInt());// 40
      new TestPrimitives(false, (byte)123, (short)257, 40000, 123L, 3.14F, 1.618D, 'A');// 42
      new TestPrimitives('A', 1.618D, 3.14F, 123L, 40000, (short)257, (byte)123, false);// 43
      new TestPrimitives(Boolean.valueOf("false"), Byte.valueOf("123"), Short.valueOf("257"), Integer.valueOf("40000"), Long.valueOf("123"), Float.valueOf("3.14"), Double.valueOf("1.618"), new Character('A'));// 44 45
   }// 46

   private TestPrimitives(boolean bool, byte b, short s, int i, long l, float f, double d, char c) {
      System.out.printf("%b, %d, %d, %d, %d, %.2f, %.2f, %c", bool, b, s, i, l, f, d, c);// 49
   }// 50

   private TestPrimitives(Character c, Double d, Float f, Long l, Integer i, Short s, Byte b, Boolean bool) {
      System.out.printf("%b, %d, %d, %d, %d, %.2f, %.2f, %c", bool, b, s, i, l, f, d, c);// 53
   }// 54

   public void printBoolean(boolean b) {
      System.out.printf("%b", b);// 57
   }// 58

   public void printByte(byte b) {
      System.out.printf("%d", b);// 61
   }// 62

   public void printShort(short s) {
      System.out.printf("%d", s);// 65
   }// 66

   public void printInt(int i) {
      System.out.printf("%d", i);// 69
   }// 70

   public void printLong(long l) {
      System.out.printf("%d", l);// 73
   }// 74

   public void printFloat(float f) {
      System.out.printf("%f", f);// 77
   }// 78

   public void printDouble(double d) {
      System.out.printf("%f", d);// 81
   }// 82

   public void printChar(char c) {
      System.out.printf("%c", c);// 85
   }// 86

   public void printBooleanBoxed(Boolean b) {
      System.out.printf("%b", b);// 90
   }// 91

   public void printByteBoxed(Byte b) {
      System.out.printf("%d", b);// 94
   }// 95

   public void printShortBoxed(Short s) {
      System.out.printf("%d", s);// 98
   }// 99

   public void printIntBoxed(Integer i) {
      System.out.printf("%d", i);// 102
   }// 103

   public void printLongBoxed(Long l) {
      System.out.printf("%d", l);// 106
   }// 107

   public void printFloatBoxed(Float f) {
      System.out.printf("%f", f);// 110
   }// 111

   public void printDoubleBoxed(Double d) {
      System.out.printf("%f", d);// 114
   }// 115

   public void printCharBoxed(Character c) {
      System.out.printf("%c", c);// 118
   }// 119

   public boolean getBoolean() {
      return false;// 123
   }

   public byte getByte() {
      return -128;// 127
   }

   public short getShort() {
      return -32768;// 131
   }

   public int getInt() {
      return 42;// 135
   }

   public Integer getInteger() {
      return 40000;// 139
   }

   public Character getCharacter() {
      return 'Z';// 143
   }

   public void printNarrowed() {
      this.printByte((byte)this.getInt());// 147
      this.printShort((short)this.getInt());// 148
   }// 149

   public void constructor() {
      new Byte((byte)1);// 152
   }// 153

   private boolean compare(char c) {
      boolean res = c > -1;// 156
      res = c > 0;// 157
      res = c > 1;// 158
      res = c > '\b';// 159
      res = c > '\t';// 160
      res = c > '\n';// 161
      res = c > '\f';// 162
      res = c > '\r';// 163
      res = c > ' ';// 164
      res = c > 'a';// 165
      res = c > 'Z';// 166
      res = c > 127;// 167
      res = c > 255;// 168
      return res;// 169
   }

   void testAutoBoxingCallRequired(boolean value) {
      Boolean.valueOf(value).hashCode();// 173
   }// 174

   void testCastRequired() {
      HashMap<String, Byte> map = new HashMap();// 177
      map.put("test", (byte)0);// 178
   }// 179
}

class 'pkg/TestPrimitives' {
   method 'testInvalidUnboxing ()V' {
      0      6
      1      6
      2      7
      3      7
      4      7
      5      7
      6      7
      7      7
      8      7
      9      7
      a      7
      b      7
      d      8
      e      8
      f      8
      10      8
      11      8
      12      8
      13      8
      14      8
      15      9
      16      9
      17      9
      18      9
      19      9
      1d      9
      1e      9
      1f      9
      20      9
      21      10
      22      10
      23      11
      24      11
      25      11
      26      11
      27      11
      28      11
      29      11
      2a      11
      2b      11
      2c      12
      2d      12
      2e      12
      2f      12
      30      12
      31      12
      32      12
      33      12
      34      12
      35      13
   }

   method 'genericBoxing (Ljava/lang/Object;)V' {
      0      16
   }

   method 'genericReturn (Ljava/util/List;)Ljava/lang/Object;' {
      0      19
      1      19
      2      19
      3      19
      4      19
      5      19
      6      19
      7      19
   }

   method 'genericParameter (Ljava/util/List;Ljava/lang/Object;)V' {
      0      23
   }

   method 'printAll ()V' {
      0      26
      1      26
      2      26
      3      26
      4      26
      5      27
      6      27
      7      27
      8      27
      9      27
      a      27
      b      28
      c      28
      d      28
      e      28
      f      28
      10      28
      11      28
      12      29
      13      29
      14      29
      15      29
      16      29
      17      29
      18      30
      19      30
      1a      30
      1b      30
      1c      30
      1d      30
      1e      30
      1f      31
      20      31
      21      31
      22      31
      23      31
      24      31
      25      32
      26      32
      27      32
      28      32
      29      32
      2a      32
      2b      32
      2c      33
      2d      33
      2e      33
      2f      33
      30      33
      31      33
      32      34
      33      34
      34      34
      35      34
      36      34
      37      34
      38      34
      39      34
      3a      35
      3b      35
      3c      35
      3d      35
      3e      35
      3f      35
      40      35
      41      35
      42      35
      43      36
      44      36
      45      36
      46      36
      47      36
      48      36
      49      36
      4a      36
      4b      36
      4c      36
      4d      37
      4e      37
      4f      37
      50      37
      51      37
      52      37
      53      37
      54      37
      55      38
      56      38
      57      38
      58      38
      59      38
      5a      38
      5b      38
      5c      38
      5d      38
      5e      39
      5f      39
      60      39
      61      39
      62      39
      63      39
      64      39
      65      39
      66      39
      67      39
      68      40
      69      40
      6a      40
      6b      40
      6c      40
      6d      40
      6e      40
      6f      40
      70      40
      71      41
      72      41
      73      41
      74      41
      75      41
      76      41
      77      41
      78      41
      79      41
      7a      41
      7b      42
      7c      42
      7d      42
      7e      42
      7f      42
      80      42
      81      42
      82      42
      83      42
      84      43
      85      43
      86      43
      87      43
      88      43
      89      43
      8a      43
      8b      43
      8c      43
      8d      43
      8e      43
      8f      43
      90      44
      91      44
      92      44
      93      44
      94      44
      95      44
      96      44
      97      44
      98      44
      99      44
      9a      44
      9b      44
      9c      45
      9d      45
      9e      45
      9f      45
      a0      45
      a1      45
      a2      45
      a3      45
      a4      45
      a5      45
      a6      45
      a7      45
      a8      46
      a9      46
      aa      46
      ab      46
      ac      46
      ad      46
      ae      46
      af      46
      b0      46
      b1      46
      b2      46
      b3      46
      b4      47
      b5      47
      b6      47
      b7      47
      b8      47
      b9      47
      ba      47
      bb      47
      bc      47
      bd      47
      be      47
      bf      47
      c0      48
      c1      48
      c2      48
      c3      48
      c4      48
      c5      48
      c6      48
      c7      48
      c8      48
      c9      48
      ca      48
      cb      48
      cc      49
      cd      49
      ce      49
      cf      49
      d0      49
      d1      49
      d2      49
      d3      49
      d4      49
      d5      49
      d6      49
      d7      49
      d8      50
      dd      50
      de      50
      e2      50
      e3      50
      e4      50
      e5      50
      e6      50
      e7      50
      e8      51
      e9      51
      ea      51
      eb      51
      ec      51
      ed      51
      ee      51
      ef      51
      f0      51
      f1      51
      f2      51
      f3      52
      f4      52
      f5      52
      f6      52
      f7      52
      f8      52
      f9      52
      fa      52
      fb      52
      fc      52
      fd      52
      fe      53
      ff      53
      100      53
      101      53
      102      53
      10a      53
      10b      53
      10c      53
      10d      53
      111      53
      112      53
      113      53
      114      53
      118      53
      119      53
      11a      53
      11b      53
      11c      53
      11d      53
      121      53
      122      53
      123      53
      124      53
      125      53
      129      53
      12a      53
      12b      53
      12c      53
      12d      53
      131      53
      132      53
      133      53
      134      53
      135      53
      136      53
      138      53
      139      53
      13a      53
      13c      54
      13d      54
      13e      54
      13f      54
      140      54
      147      54
      148      54
      149      54
      14a      54
      14b      54
      14c      54
      14d      54
      151      54
      152      54
      153      54
      154      54
      155      54
      156      54
      157      54
      15b      54
      15c      54
      15d      54
      15e      54
      15f      54
      160      54
      161      54
      165      54
      166      54
      167      54
      168      54
      169      54
      16a      54
      16b      54
      16d      54
      16e      54
      16f      54
      175      55
      176      55
      177      55
      178      55
      179      55
      17a      55
      17b      55
      17c      55
      17d      55
      17e      55
      17f      55
      180      55
      181      55
      182      55
      183      55
      184      55
      185      55
      186      55
      18f      56
      190      56
      194      56
      195      56
      196      56
      19a      56
      19b      56
      19f      56
      1a0      56
      1a1      56
      1a5      56
      1a6      56
      1aa      56
      1ab      56
      1ac      56
      1b0      56
      1b1      56
      1b5      56
      1c1      57
      1c2      57
      1c3      57
      1c4      57
      1c5      57
      1c6      57
      1c7      57
      1c8      57
      1c9      57
      1ca      57
      1cb      57
      1cc      57
      1cd      57
      1ce      57
      1cf      57
      1d0      57
      1d1      57
      1d2      57
      1d3      57
      1d4      57
      1d5      57
      1d6      57
      1d7      57
      1d8      57
      1d9      57
      1da      57
      1db      57
      1dc      57
      1dd      57
      1de      57
      1df      57
      1e0      57
      1e1      57
      1e2      57
      1e3      57
      1e4      57
      1e5      57
      1e6      57
      1e7      57
      1e8      57
      1e9      57
      1ea      57
      1eb      57
      1ec      57
      1ed      57
      1ee      57
      1ef      57
      1f0      57
      1f1      57
      1f2      57
      1f3      57
      1f4      57
      1f5      57
      1f6      57
      1f7      57
      1f8      57
      1fd      57
      1fe      57
      202      57
      203      57
      204      57
      209      58
   }

   method '<init> (ZBSIJFDC)V' {
      4      41
      7      41
      11      41
      18      41
      1f      41
      27      41
      2f      41
      37      41
      40      41
      49      41
      4d      41
      51      42
   }

   method '<init> (Ljava/lang/Character;Ljava/lang/Double;Ljava/lang/Float;Ljava/lang/Long;Ljava/lang/Integer;Ljava/lang/Short;Ljava/lang/Byte;Ljava/lang/Boolean;)V' {
      4      45
      7      45
      35      45
      39      46
   }

   method 'printBoolean (Z)V' {
      0      49
      3      49
      c      49
      10      49
      14      50
   }

   method 'printByte (B)V' {
      0      53
      3      53
      c      53
      10      53
      14      54
   }

   method 'printShort (S)V' {
      0      57
      3      57
      c      57
      10      57
      14      58
   }

   method 'printInt (I)V' {
      0      61
      3      61
      c      61
      10      61
      14      62
   }

   method 'printLong (J)V' {
      0      65
      3      65
      c      65
      10      65
      14      66
   }

   method 'printFloat (F)V' {
      0      69
      3      69
      c      69
      10      69
      14      70
   }

   method 'printDouble (D)V' {
      0      73
      3      73
      c      73
      10      73
      14      74
   }

   method 'printChar (C)V' {
      0      77
      3      77
      c      77
      10      77
      14      78
   }

   method 'printBooleanBoxed (Ljava/lang/Boolean;)V' {
      0      81
      3      81
      d      81
      11      82
   }

   method 'printByteBoxed (Ljava/lang/Byte;)V' {
      0      85
      3      85
      d      85
      11      86
   }

   method 'printShortBoxed (Ljava/lang/Short;)V' {
      0      89
      3      89
      d      89
      11      90
   }

   method 'printIntBoxed (Ljava/lang/Integer;)V' {
      0      93
      3      93
      d      93
      11      94
   }

   method 'printLongBoxed (Ljava/lang/Long;)V' {
      0      97
      3      97
      d      97
      11      98
   }

   method 'printFloatBoxed (Ljava/lang/Float;)V' {
      0      101
      3      101
      d      101
      11      102
   }

   method 'printDoubleBoxed (Ljava/lang/Double;)V' {
      0      105
      3      105
      d      105
      11      106
   }

   method 'printCharBoxed (Ljava/lang/Character;)V' {
      0      109
      3      109
      d      109
      11      110
   }

   method 'getBoolean ()Z' {
      0      113
      1      113
   }

   method 'getByte ()B' {
      0      117
      2      117
   }

   method 'getShort ()S' {
      0      121
      3      121
   }

   method 'getInt ()I' {
      0      125
      2      125
   }

   method 'getInteger ()Ljava/lang/Integer;' {
      0      129
      2      129
      5      129
   }

   method 'getCharacter ()Ljava/lang/Character;' {
      0      133
      2      133
      5      133
   }

   method 'printNarrowed ()V' {
      2      137
      5      137
      6      137
      b      138
      e      138
      f      138
      12      139
   }

   method 'constructor ()V' {
      4      142
      9      143
   }

   method 'compare (C)Z' {
      1      146
      2      146
      a      146
      c      147
      14      147
      16      148
      17      148
      1f      148
      21      149
      23      149
      2b      149
      2d      150
      2f      150
      37      150
      39      151
      3b      151
      43      151
      45      152
      47      152
      4f      152
      51      153
      53      153
      5b      153
      5d      154
      5f      154
      67      154
      69      155
      6b      155
      73      155
      75      156
      77      156
      7f      156
      81      157
      83      157
      8b      157
      8d      158
      90      158
      98      158
      9a      159
   }

   method 'testAutoBoxingCallRequired (Z)V' {
      1      163
      4      163
      8      164
   }

   method 'testCastRequired ()V' {
      7      167
      9      168
      b      168
      f      168
      13      169
   }
}

Lines mapping:
8 <-> 7
9 <-> 8
10 <-> 9
11 <-> 10
12 <-> 11
13 <-> 12
14 <-> 13
15 <-> 14
17 <-> 15
18 <-> 16
19 <-> 17
20 <-> 18
21 <-> 19
22 <-> 20
23 <-> 21
24 <-> 22
25 <-> 23
27 <-> 24
28 <-> 25
29 <-> 26
30 <-> 27
31 <-> 28
32 <-> 29
33 <-> 30
34 <-> 31
36 <-> 32
37 <-> 33
39 <-> 34
40 <-> 35
42 <-> 36
43 <-> 37
44 <-> 38
45 <-> 38
46 <-> 39
49 <-> 42
50 <-> 43
53 <-> 46
54 <-> 47
57 <-> 50
58 <-> 51
61 <-> 54
62 <-> 55
65 <-> 58
66 <-> 59
69 <-> 62
70 <-> 63
73 <-> 66
74 <-> 67
77 <-> 70
78 <-> 71
81 <-> 74
82 <-> 75
85 <-> 78
86 <-> 79
90 <-> 82
91 <-> 83
94 <-> 86
95 <-> 87
98 <-> 90
99 <-> 91
102 <-> 94
103 <-> 95
106 <-> 98
107 <-> 99
110 <-> 102
111 <-> 103
114 <-> 106
115 <-> 107
118 <-> 110
119 <-> 111
123 <-> 114
127 <-> 118
131 <-> 122
135 <-> 126
139 <-> 130
143 <-> 134
147 <-> 138
148 <-> 139
149 <-> 140
152 <-> 143
153 <-> 144
156 <-> 147
157 <-> 148
158 <-> 149
159 <-> 150
160 <-> 151
161 <-> 152
162 <-> 153
163 <-> 154
164 <-> 155
165 <-> 156
166 <-> 157
167 <-> 158
168 <-> 159
169 <-> 160
173 <-> 164
174 <-> 165
177 <-> 168
178 <-> 169
179 <-> 170
Not mapped:
48
52
